
#user  nobody;
worker_processes  1;
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

# load modules compiled as Dynamic Shared Object (DSO)
#
#dso {
#    load ngx_http_fastcgi_module.so;
#    load ngx_http_rewrite_module.so;
#}

http {
    include       mime.types;
    default_type  application/octet-stream;
	

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
	

    #server {
        #listen       80;
        #server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        #location / {
            #root   html;
            #index  index.html index.htm;
		#}
        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        #error_page   500 502 503 504  /50x.html;
        #location = /50x.html {
            #root   html;
        #}

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    #}
	
	server{
		server_name localhost;
		listen 80;
		location /{
			add_header 'Access-Control-Allow-Origin' '*';
			root /web/haalthy;
			index index.html;
		}
	}	
	server{
		server_name haalthy.com;
		listen 80;
		listen 443;
		ssl on;
		ssl_certificate /usr/local/nginx/conf/server.crt;
		ssl_certificate_key /usr/local/nginx/conf/server.key;
		location /{
			root /web/haalthy;
			index index.html;
		}
	}


	server{
		server_name nsclccalc.haalthy.com;
		listen 80;
		listen 443;
		ssl on;
		ssl_certificate /usr/local/nginx/conf/server.crt;
		ssl_certificate_key /usr/local/nginx/conf/server.key;
		location /{
			root /web/NSCLCStage;
			index index.html;
		}
	}

	server{
		server_name react.haalthy.com;
		listen 80;
		location /{
			root /web/react-app;
            add_header Cache-Control no-store;
			index index.html;
		}
	}
	server{
		server_name sclccalc.haalthy.com;
		listen 80;
		listen 443;
		ssl on;
		ssl_certificate /usr/local/nginx/conf/server.crt;
		ssl_certificate_key /usr/local/nginx/conf/server.key;
		location /{
			root /web/SCLCStage;
			index index.html;
		}
	}
	
	server{
		server_name BMICalc.haalthy.com;
		listen 80;
		listen 443;
		ssl on;
		ssl_certificate /usr/local/nginx/conf/server.crt;
		ssl_certificate_key /usr/local/nginx/conf/server.key;
		location /{
			root /web/BMICalc;
			index index.html;
		}
	}
	server{
		listen 80;
		server_name weixin.haalthy.com;
		location /{
			root /web/weixin-haalthy;
            add_header Cache-Control no-store;
			index index.html;
		}
	}
	server{
		listen 80;
		server_name test.haalthy.com;
		location /{
			root /web/weixin-haalthy/test;
			index index.html;
            add_header Cache-Control no-store;
		}
	}
	server{
		listen 80;
		server_name service.haalthy.com;
		location /{  				
			add_header X-Cache $upstream_cache_status;
			if ($request_method = 'OPTIONS') {
				add_header 'Access-Control-Allow-Origin' '*';
				#
				# Om nom nom cookies
				#
				add_header 'Access-Control-Allow-Credentials' 'true';
				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
				#
				# Custom headers and headers various browsers *should* be OK with but aren't
				#
				add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
				#
				# Tell client that this pre-flight info is valid for 20 days
				#
				add_header 'Access-Control-Max-Age' 1728000;
				add_header 'Content-Type' 'text/plain charset=UTF-8';
				add_header 'Content-Length' 0;
				return 204;
			 }
			 if ($request_method = 'POST') {
				add_header 'Access-Control-Allow-Origin' '*';
				add_header 'Access-Control-Allow-Credentials' 'true';
				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
				add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
			 }
			 if ($request_method = 'GET') {
				add_header 'Access-Control-Allow-Origin' '*';
				add_header 'Access-Control-Allow-Credentials' 'true';
				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
				add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
			}
			proxy_pass http://127.0.0.1:800/haalthyservice;        
        }
	}
	server{
    		listen 80;
    		server_name service2.haalthy.com;
    		location /{
    			add_header X-Cache $upstream_cache_status;
    			if ($request_method = 'OPTIONS') {
    				add_header 'Access-Control-Allow-Origin' '*';
    				#
    				# Om nom nom cookies
    				#
    				add_header 'Access-Control-Allow-Credentials' 'true';
    				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    				#
    				# Custom headers and headers various browsers *should* be OK with but aren't
    				#
    				add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
    				#
    				# Tell client that this pre-flight info is valid for 20 days
    				#
    				add_header 'Access-Control-Max-Age' 1728000;
    				add_header 'Content-Type' 'text/plain charset=UTF-8';
    				add_header 'Content-Length' 0;
    				return 204;
    			 }
    			 if ($request_method = 'POST') {
    				add_header 'Access-Control-Allow-Origin' '*';
    				add_header 'Access-Control-Allow-Credentials' 'true';
    				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    				add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
    			 }
    			 if ($request_method = 'GET') {
    				add_header 'Access-Control-Allow-Origin' '*';
    				add_header 'Access-Control-Allow-Credentials' 'true';
    				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    				add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
    			}
    			proxy_pass http://127.0.0.1:800/service;
            }
    	}

	server{
		listen 80;
		server_name content.haalthy.com;
		location /{  				
			add_header X-Cache $upstream_cache_status;
			if ($request_method = 'OPTIONS') {
				add_header 'Access-Control-Allow-Origin' ‘*’;
				#
				# Om nom nom cookies
				#
				add_header 'Access-Control-Allow-Credentials' 'true';
				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
				#
				# Custom headers and headers various browsers *should* be OK with but aren't
				#
				add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
				#
				# Tell client that this pre-flight info is valid for 20 days
				#
				add_header 'Access-Control-Max-Age' 1728000;
				add_header 'Content-Type' 'text/plain charset=UTF-8';
				add_header 'Content-Length' 0;
				return 204;
			 }
			 if ($request_method = 'POST') {
				add_header 'Access-Control-Allow-Origin' '*';
				add_header 'Access-Control-Allow-Credentials' 'true';
				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
				add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
			 }
			 if ($request_method = 'GET') {
				add_header 'Access-Control-Allow-Origin' '*';
				add_header 'Access-Control-Allow-Credentials' 'true';
				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
				add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
			}
			proxy_pass http://127.0.0.1:800/haalthyservicecontent;        
        	}

	}

	proxy_redirect          off;
	proxy_set_header        Host $host;
	proxy_set_header        X-Real-IP $remote_addr;
	proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header        Accept-Encoding 'gzip';
	client_max_body_size    10m;
	client_body_buffer_size 256k;
	proxy_connect_timeout   300;
	proxy_send_timeout      300;
	proxy_read_timeout      300;
	 
	#proxy_buffer_size       4k;
	#proxy_buffers           4 32k;
	#proxy_busy_buffers_size 64k;
	#proxy_temp_file_write_size 64k;
	 
	proxy_buffer_size       128k;
	proxy_buffers           4 256k;
	proxy_busy_buffers_size 256k;
	proxy_temp_file_write_size 256k;
    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
